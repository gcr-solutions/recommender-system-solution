<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recommender System Solution workshop on Recommender System Solution</title><link>https://gcr-solutions.github.io/recommender-system-solution/</link><description>Recent content in Recommender System Solution workshop on Recommender System Solution</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gcr-solutions.github.io/recommender-system-solution/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Cloud9</title><link>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/aws-cloud9/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/aws-cloud9/readme/</guid><description>AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser. It includes a code editor, debugger, and terminal.
Get started with AWS Cloud9 Go to AWS Cloud9 Console Click &amp;ldquo;Create environment&amp;rdquo; button to create an cloud9 environment Name it rs-workshop, click Next Take all default values and click Create environment When it comes up, the cloud9 console environment should looks like below: NAWS patch install[Optional] Install boto3 sudo pip3 install boto3 Download install_chronicled.</description></item><item><title>Deploy a Lambda@Edge function to authenticate with Cognito</title><link>https://gcr-solutions.github.io/recommender-system-solution/deploy/online/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/deploy/online/readme/</guid><description>In this step, you will find and deploy one serverless application that have been published to the AWS Serverless Application Repository. The application enables authentication with Amazon Cognito for your website.
The following diagram is a high-level architecture of this lab
There are two S3 bucket
Private S3 bucket: contains private content, users can not access the content before login by Cognito Public S3 bucket: contains the demo website resources, users can access it through CloudFront publicly Here is how it works</description></item><item><title>Deploy a Lambda@Edge function to authenticate with Cognito</title><link>https://gcr-solutions.github.io/recommender-system-solution/deploy/ui/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/deploy/ui/readme/</guid><description>In this step, you will find and deploy one serverless application that have been published to the AWS Serverless Application Repository. The application enables authentication with Amazon Cognito for your website.
The following diagram is a high-level architecture of this lab
There are two S3 bucket
Private S3 bucket: contains private content, users can not access the content before login by Cognito Public S3 bucket: contains the demo website resources, users can access it through CloudFront publicly Here is how it works</description></item><item><title>Deploy The Offline Logic</title><link>https://gcr-solutions.github.io/recommender-system-solution/deploy/offline/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/deploy/offline/readme/</guid><description>In this step, you will find and deploy one serverless application that have been published to the AWS Serverless Application Repository. The application enables authentication with Amazon Cognito for your website.
The following diagram is a high-level architecture of this lab
There are two S3 bucket
Private S3 bucket: contains private content, users can not access the content before login by Cognito Public S3 bucket: contains the demo website resources, users can access it through CloudFront publicly Here is how it works</description></item><item><title>Install eksctl</title><link>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/eksctl-install/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/eksctl-install/readme/</guid><description>eksctl is a command line tool for working with EKS clusters that automates many individual tasks.
install eksctl using the following command: curl --silent --location &amp;#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz&amp;#34; | tar xz -C /tmp sudo mv -v /tmp/eksctl /usr/local/bin Confirm the eksctl command works: eksctl version</description></item><item><title>Install kubectl</title><link>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/kubectl-install/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-solution/prerequisite/kubectl-install/readme/</guid><description>kubectl is a command line tool for working with Kubernetes clusters.
install kubectl using the following command: sudo curl --silent --location -o /usr/local/bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl sudo chmod +x /usr/local/bin/kubectl Confirm the kubectl command works: kubectl version</description></item></channel></rss>