AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8010)

  CloudFormation for RecSys StepFuncs


Parameters:
  StepFuncAndLambdaRoleName:
    Type: String
    Default: rsdemo-LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: rsdemo-SMRole

  S3UtilLabmda:
    Type: String
    Default: rsdemo-S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: rsdemo-PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: rsdemo-SNSMessageLambda


Resources:
  OverallStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: rsdemo-News-OverallStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Detect change type",
          "TimeoutSeconds": 36000,
          "States": {
            "Detect change type": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.change_type",
                  "IsPresent": false,
                  "Next": "Action new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "ACTION",
                  "Next": "Action new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "CONTENT",
                  "Next": "Content new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "MODEL",
                  "Next": "Train model"
                }
              ],
              "Default": "Action new"
            },
            "Action new": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$":  "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-ActionNewStepFunc",
                "Name.$": "States.Format('oa{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Content new": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$":  "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-ItemNewStepFunc",
                "Name.$": "States.Format('oc{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Train model": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$":  "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-TrainModelStepFunc",
                "Name.$": "States.Format('ot{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }