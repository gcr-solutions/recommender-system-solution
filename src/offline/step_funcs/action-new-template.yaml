AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8010)

  CloudFormation for RecSys StepFuncs


Parameters:
  StepFuncAndLambdaRoleName:
    Type: String
    Default: rsdemo-LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: rsdemo-SMRole

  S3UtilLabmda:
    Type: String
    Default: rsdemo-S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: rsdemo-PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: rsdemo-SNSMessageLambda

Resources:
  ActionNewStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: rsdemo-News-ActionNewStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "User processing",
          "TimeoutSeconds": 36000,
          "States": {
            "User processing": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-UserPreprocessingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.UserProcessing",
              "Next": "Add item user batch"
            },
            "Add item user batch": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-AddItemUserBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.AddItemUserBatch",
              "Next": "Action processing"
            },
            "Action processing": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-ActionPreprocessingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.ActionProcessing",
              "Next": "Inverted list"
            },
            "Inverted list": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-InvertedListStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.InvertedList",
              "Next": "Portrait batch"
            },
            "Portrait batch": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-PortraitBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.PortraitBatch",
              "Next": "Recall batch"
            },
            "Recall batch": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-RecallBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.RecallBatch",
              "Next": "Rank batch"
            },
            "Rank batch": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-RankBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.RankBatch",
              "Next": "Filter batch"
            },
            "Filter batch": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rsdemo-News-FilterBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.FilterBatch",
              "Next": "Send notification"
            },
            "Send notification": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${SNSMessageLambda}",
                "Payload": {
                  "file_type": "action-new",
                  "message_type": "news",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "Next": "Succeed",
              "ResultPath": "$.Notification"
            },
            "Succeed": {
              "Type": "Succeed"
            }
          }
        }